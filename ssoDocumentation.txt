Create a Google API Console project and enable the Google Sign-In API. To do this, follow these steps:

a. Go to the Google API Console: https://console.developers.google.com/

b. Create a new project by clicking on the "Select a project" dropdown at the top of the page and clicking on the "New Project" button.

c. Once you've created the project, click on the "Enable APIs and Services" button at the top of the page.

d. Search for "Google Sign-In API" and click on the "Enable" button.

e. Click on the "Create credentials" button and select "OAuth client ID".

f. Configure the consent screen by providing a name and email address, and clicking on the "Save" button.

g. Select "Web application" as the application type, and enter the authorized JavaScript origins and redirect URIs for your application. For example, if you're developing locally, you might enter "http://localhost:3000" as the authorized origin and "http://localhost:3000/callback" as the redirect URI.

h. Click on the "Create" button to create the OAuth client ID.

Install the react-google-login package, which provides an easy-to-use React component for integrating with the Google Sign-In API. You can do this by running the following command in your terminal:


npm install react-google-login
```

Import the GoogleLogin component from the react-google-login package in your React component.


import { GoogleLogin } from 'react-google-login';
```

Render the GoogleLogin component in your React component, passing in the clientId and onSuccess callback props.


<GoogleLogin
  clientId="YOUR_CLIENT_ID"
  onSuccess={onLoginSuccess}
/>
```

In the onLoginSuccess callback function, handle the Google Sign-In response by saving the user's information and/or redirecting to another page.


const onLoginSuccess = (response) => {
  const { tokenId, profileObj } = response;
  // Save tokenId and profileObj somewhere
  // Redirect to another page if necessary
}
```
#last code that work properly :

import { gapi } from "gapi-script"; (npm install gapi)


------------------
import React, { useEffect } from "react";
import GoogleLogin from "react-google-login";
import { gapi } from "gapi-script";
import { GoogleLogout, useGoogleLogout } from "react-google-login";

const clientId =
  "439984794014-hbtnkhdm5hjmgs0ekffbroo8cs5af8in.apps.googleusercontent.com";

function App() {
  useEffect(() => {
    function start() {
      gapi.client.init({
        clientId: clientId,
        scope: "email",
      });
    }

    gapi.load("client:auth2", start);
  }, []);

  const onSuccess = (response) => {
    console.log("Login success: ", response);
  };

  const onFailure = (error) => {
    console.log("Login failed: ", error);
  };

  const onLogoutSuccess = () => {
    try {
      const auth2 = gapi.auth2.getAuthInstance();
      auth2.signOut().then(() => {
        console.log("User signed out.");
      });
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <div>
      <GoogleLogin
        clientId={clientId}
        buttonText="Sign in with Google"
        onSuccess={onSuccess}
        onFailure={onFailure}
        cookiePolicy={"single_host_origin"}
        prompt="select_account"
      />
      <GoogleLogout
        clientId={clientId}
        onLogoutSuccess={onLogoutSuccess}
        uxMode="redirect"
        redirectUri="http://localhost:3000"
      />
    </div>
  );
}

export default App;






